#!/bin/bash

# Graviton Android Release Keystore Generator
# Interactive version - reliable keystore generation for Play Store distribution

echo "🔐 Graviton Android Release Keystore Generator"
echo "=============================================="
echo ""

# Check if keytool is available
if ! command -v keytool &> /dev/null; then
    echo "❌ Error: keytool not found. Please install Java Development Kit (JDK)"
    exit 1
fi

# Set keystore path (relative to project root)
KEYSTORE_PATH="android/upload-keystore.jks"

# Check if keystore already exists
if [ -f "$KEYSTORE_PATH" ]; then
    echo "⚠️  Keystore already exists at $KEYSTORE_PATH"
    read -p "Do you want to create a new one? This will overwrite the existing keystore. (y/N): " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Aborted."
        exit 0
    fi
fi

# Get passwords only
echo "📝 Please provide keystore passwords:"
echo ""
read -p "Store password (min 6 characters): " -s STORE_PASSWORD
echo
read -p "Confirm store password: " -s STORE_PASSWORD_CONFIRM
echo

if [ "$STORE_PASSWORD" != "$STORE_PASSWORD_CONFIRM" ]; then
    echo "❌ Passwords don't match!"
    exit 1
fi

read -p "Key password (min 6 characters): " -s KEY_PASSWORD
echo
read -p "Confirm key password: " -s KEY_PASSWORD_CONFIRM
echo

if [ "$KEY_PASSWORD" != "$KEY_PASSWORD_CONFIRM" ]; then
    echo "❌ Key passwords don't match!"
    exit 1
fi

echo ""
echo "🔧 Generating keystore..."
echo "You will be prompted to enter certificate information."
echo ""

# Generate keystore interactively (most reliable method)
keytool -genkey -v \
    -keystore "$KEYSTORE_PATH" \
    -alias upload \
    -keyalg RSA \
    -keysize 2048 \
    -validity 10000 \
    -storepass "$STORE_PASSWORD" \
    -keypass "$KEY_PASSWORD"

if [ $? -eq 0 ]; then
    echo ""
    echo "✅ Keystore generated successfully!"
    echo ""
    echo "📝 Updating android/key.properties..."
    
    # Update key.properties file
    cat > android/key.properties << EOF
# Android signing configuration
# Generated by tools/generate_keystore.sh on $(date)

storeFile=upload-keystore.jks
storePassword=$STORE_PASSWORD
keyAlias=upload
keyPassword=$KEY_PASSWORD
EOF

    echo ""
    echo "🎉 Setup complete!"
    echo ""
    echo "📋 Next steps:"
    echo "1. Keep your keystore file (android/upload-keystore.jks) secure"
    echo "2. Back up your keystore and passwords in a safe location"
    echo "3. Never commit android/key.properties to version control"
    echo "4. Build your release app bundle: flutter build appbundle --flavor prod --dart-define-from-file config/prod.json --release"
    echo ""
    echo "⚠️  IMPORTANT: If you lose your keystore, you won't be able to update your app on Google Play!"
    
else
    echo "❌ Failed to generate keystore"
    exit 1
fi